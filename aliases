alias cls='clear'
alias cat='bat'
alias man='batman'
alias rm='trash'
alias trail='<<<${(F)path}' # each entry in $PATH on a new line

# exa
#  -a  Show hidden en dot files
#  -h  Add a header row to each column
#  -l  Display extended file metadata as a table
#  -D  List only directories
#  -F  Display file kind indicators
#  -T  Recurse into directories as a tree
alias exa='exa -hlF --git --group-directories-first'
alias ls='exa'
alias l='exa'
alias la='exa -a'
alias lsa='exa -a'
alias lsd='exa -aD'

# Tree view
alias l2='exa -a --tree --level=2'
alias l3='exa -a --tree --level=3'
alias l4='exa -a --tree --level=4'
alias l5='exa -a --tree --level=5'
alias l6='exa -a --tree --level=6'
alias l7='exa -a --tree --level=7'
alias l8='exa -a --tree --level=8'
alias l9='exa -a --tree --level=9'
# Tree view without meta data
alias ls2='exa -a --no-permissions --no-user --no-filesize --no-time --tree --level=2'
alias ls3='exa -a --no-permissions --no-user --no-filesize --no-time --tree --level=3'
alias ls4='exa -a --no-permissions --no-user --no-filesize --no-time --tree --level=4'
alias ls5='exa -a --no-permissions --no-user --no-filesize --no-time --tree --level=5'
alias ls6='exa -a --no-permissions --no-user --no-filesize --no-time --tree --level=6'
alias ls7='exa -a --no-permissions --no-user --no-filesize --no-time --tree --level=7'
alias ls8='exa -a --no-permissions --no-user --no-filesize --no-time --tree --level=8'
alias ls9='exa -a --no-permissions --no-user --no-filesize --no-time --tree --level=9'


lsdr() {exa -aDT --level="$1"}

# highlight 'word' in stdout (example: "l3 | highlight kafka" shows all 'kafka' max 3 levels deep) 
highlight() {less -Ip "$1"}

# recursively find files and folders with given name, displaying them in full tree structure.
# Stage 1: Use 'tree' to find matching files and folders
#    tree -F         : appends '/' after each directory. Used in stage 2 to keep non-matching intermediate directories.
#    tree --prune    : omit directories with no matching children
#    tree --matchdirs: apply -P pattern also to directories
#    Problem: this tree command will include *all* children of a matching directory (even the filenames with no match)
# Stage 2: Use 'grep' to keep only matches ($1) or directories (/) (without the latter, the tree structure will break)
find1() {tree -aFL 1 --prune --matchdirs -P "*$1*" | grep -Ei "$1|/" | highlight "$1"}
find2() {tree -aFL 2 --prune --matchdirs -P "*$1*" | grep -Ei "$1|/" | highlight "$1"}
find3() {tree -aFL 3 --prune --matchdirs -P "*$1*" | grep -Ei "$1|/" | highlight "$1"}
find4() {tree -aFL 4 --prune --matchdirs -P "*$1*" | grep -Ei "$1|/" | highlight "$1"}
find5() {tree -aFL 5 --prune --matchdirs -P "*$1*" | grep -Ei "$1|/" | highlight "$1"}
find6() {tree -aFL 6 --prune --matchdirs -P "*$1*" | grep -Ei "$1|/" | highlight "$1"}
find7() {tree -aFL 7 --prune --matchdirs -P "*$1*" | grep -Ei "$1|/" | highlight "$1"}
find8() {tree -aFL 8 --prune --matchdirs -P "*$1*" | grep -Ei "$1|/" | highlight "$1"}
find9() {tree -aFL 9 --prune --matchdirs -P "*$1*" | grep -Ei "$1|/" | highlight "$1"}

# .dotfiles bookkeeping
alias brewdump='cd ~/.dotfiles; brew bundle dump --force'
alias vscodedump='cd ~/.dotfiles; code --list-extensions > vscode_extensions'

# create a new workspace
alias mkws='python3 "$DOTFILES_HOME/bin/create-workspace.py"'

alias wspersonal='cd ~/workspaces/personal'
alias wsrestor='cd ~/workspaces/restor'
